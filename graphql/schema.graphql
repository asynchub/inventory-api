type Tenant {
  id: ID!
  dateCreatedAt: String
  name: String
  dateTenantLogIn: String
  dateTenantLogOut: String
  state: String
}

input TenantInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
  isConfirmed: Boolean
}

input TenantInputUpdate {
  id: ID!
  name: String
  dateTenantLogIn: String
  dateTenantLogOut: String
  state: String
}


type TenantUser {
  id: ID!
  dateCreatedAt: String
  name: String
  nameTwo: String
  emailVerified: String
  inviteInfo: String
  dateTenantLogIn: String
  dateTenantLogOut: String
  state: String
  access: String
}

input TenantUserInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
  nameTwo: String
  emailVerified: String
  inviteInfo: String
  access: String
}

input TenantUserInputUpdate {
  id: ID!
  name: String
  nameTwo: String
  emailVerified: String
  inviteInfo: String
  dateTenantLogIn: String
  dateTenantLogOut: String
  state: String
  access: String
}


type Org {
  id: ID!
  dateCreatedAt: String
  name: String
  regNr: String
  email: String
  phone: String
  webPage: String
  country: String
  city: String
  street: String
  address: String
}

input OrgInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
  regNr: String
  email: String
  phone: String
  webPage: String
  country: String
  city: String
  street: String
  address: String
}

input OrgInputUpdate {
  id: ID!
  name: String
  regNr: String
  email: String
  phone: String
  webPage: String
  country: String
  city: String
  street: String
  address: String
}


type Item {
  id: ID!
  dateCreatedAt: String
  modelNumber: String
  serialNumber: String
  inventoryNumber: String
  dateWarrantyBegins: String
  dateWarrantyExpires: String
  attachments: String
  itemType: ItemType
  actions: [Action]
}

input ItemInput {
  id: ID!
  dateCreatedAt: String!
  modelNumber: String!
  serialNumber: String!
  inventoryNumber: String
  dateWarrantyBegins: String!
  dateWarrantyExpires: String!
  attachments: String!
  itemTypeId: String
}

input ItemInputUpdate {
  id: ID!
  modelNumber: String
  serialNumber: String
  inventoryNumber: String
  dateWarrantyBegins: String
  dateWarrantyExpires: String
  attachments: String
  itemTypeId: String
}

type ItemType {
  id: ID!
  dateCreatedAt: String
  name: String
}

input ItemTypeInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
}

input ItemTypeInputUpdate {
  id: ID!
  dateCreatedAt: String
  name: String
}

type EndUser {
  id: ID!
  dateCreatedAt: String
  name: String
  email: String
  emailVerified: String
  phone: String
  isClientSendEmail: Boolean
}

input EndUserInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
  email: String!
  phone: String!
}

input EndUserInputUpdate {
  id: ID!
  dateCreatedAt: String
  name: String
  email: String
  phone: String
  isClientSendEmail: Boolean
}


type EndUserInfo {
  id: ID!
  dateCreatedAt: String
  endUser: EndUser
  group: Group
  invitedBy: String
  dateInvitedAt: String
  inviteInfo: String
  confirmedBy: String
  dateConfirmedAt: String
}

input EndUserInfoInput {
  id: ID!
  dateCreatedAt: String!
  endUserId: String!
  groupId: String!
  invitedBy: String
  inviteInfo: String
  dateInvitedAt: String!
  confirmedBy: String
  dateConfirmedAt: String
}

input EndUserInfoInputUpdate {
  id: ID!
  groupId: String
  dateConfirmedAt: String
}


# Person is created for user profile information and to interact with other persons
type Person {
  id: ID! # person:123
  dateCreatedAt: String
  dateModifiedAt: String
  name: String!
  email: String
  emailVerified: String
  phone: String
  inviteInfo: String
  requestInfo: String
  confirmInfo: String
}

input PersonInput {
  id: ID! # person:123
  dateCreatedAt: String
  name: String
  email: String # unique email
  emailVerified: String
  phone: String
  inviteInfo: String
  requestInfo: String
  confirmInfo: String
}

input PersonInputUpdate {
  id: ID! # person:123
  dateModifiedAt: String
  name: String
  email: String
  phone: String
  inviteInfo: String
  requestInfo: String
  confirmInfo: String
}


type Group {
  id: ID!
  dateCreatedAt: String
  name: String
  regNr: String
  email: String
  phone: String
  webPage: String
  endUserInfos: [EndUserInfo]!
}

input GroupInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
  regNr: String
  email: String
  phone: String
  webPage: String
}

input GroupInputUpdate {
  id: ID!
  dateCreatedAt: String
  name: String
  regNr: String
  email: String
  phone: String
  webPage: String
}


type ItemFuture @aws_iam @aws_api_key {
  id: ID!
  dateCreatedAt: String
  modelNumber: String
  serialNumber: String
  inventoryNumber: String
  dateWarrantyBegins: String
  dateWarrantyExpires: String
  attachments: String
  itemType: ItemType
  actions: [Action]
}

type EndUserFuture @aws_iam @aws_api_key {
  id: ID!
  dateCreatedAt: String
  name: String
  email: String
  emailVerified: String
  phone: String
  isClientSendEmail: Boolean 
}

type LocationFuture @aws_iam @aws_api_key {
  id: ID!
  dateCreatedAt: String
  name: String
  email: String
  phone: String
  webPage: String
  country: String
  city: String
  street: String
  address: String
}

type ActionTypeFuture @aws_iam @aws_api_key {
  id: ID!
  dateCreatedAt: String
  name: String
  isVisibleLatest: Boolean
  isVisibleNext: Boolean
}

type ActionFuture @aws_iam @aws_api_key {
  id: ID!
  name: String
  description: String
  userId: String
  dateCreatedAt: String
  item: ItemFuture
  @aws_iam @aws_api_key
  endUser: EndUserFuture
  @aws_iam @aws_api_key
  location: LocationFuture
  @aws_iam @aws_api_key
  dateActionStart: String
  dateActionEnd: String
  actionType: ActionTypeFuture
  @aws_iam @aws_api_key
  attachments: String
}


type Action {
  id: ID!
  name: String
  description: String
  dateCreatedAt: String
  item: Item
  endUser: EndUser
  location: Location
  valueUnitsA: String
  valueEstimA: Float
  valueActualA: Float
  valueUnitsB: String
  valueEstimB: Float
  valueActualB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  actionType: ActionType
  index: String
  attachments: String
}

input ActionInput {
  id: ID!
  name: String
  description: String
  dateCreatedAt: String!
  itemId: String!
  endUserId: String!
  locationId: String!
  valueUnitsA: String
  valueEstimA: Float
  valueActualA: Float
  valueUnitsB: String
  valueEstimB: Float
  valueActualB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String!
  dateActionEnd: String!
  actionTypeId: String
  index: String
  attachments: String
}

input ActionInputUpdate {
  id: ID!
  name: String
  description: String
  dateCreatedAt: String
  itemId: String
  endUserId: String
  locationId: String
  valueUnitsA: String
  valueEstimA: Float
  valueActualA: Float
  valueUnitsB: String
  valueEstimB: Float
  valueActualB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  actionTypeId: String
  index: String
  attachments: String
}


type ActionType {
  id: ID!
  dateCreatedAt: String
  name: String
  isVisibleLatest: Boolean
  isVisibleNext: Boolean
}

input ActionTypeInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
  isVisibleLatest: Boolean
  isVisibleNext: Boolean
}

input ActionTypeInputUpdate {
  id: ID!
  dateCreatedAt: String
  name: String
  isVisibleLatest: Boolean
  isVisibleNext: Boolean
}


type ActionGang {
  id: ID!
  name: String
  description: String
  dateCreatedAt: String
  valueUnitsA: String
  valueEstimA: Float
  valueUnitsB: String
  valueEstimB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  index: String
  attachments: String
  children: String
}

input ActionGangInput {
  id: ID!
  name: String
  description: String
  dateCreatedAt: String!
  valueUnitsA: String
  valueEstimA: Float
  valueUnitsB: String
  valueEstimB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  index: String
  attachments: String
  children: String
}

input ActionGangInputUpdate {
  id: ID!
  name: String
  description: String
  valueUnitsA: String
  valueEstimA: Float
  valueUnitsB: String
  valueEstimB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  index: String
  attachments: String
  children: String
}


type Project {
  id: ID!
  name: String
  serialNumber: String
  description: String
  dateCreatedAt: String
  valueUnitsA: String
  valueEstimA: Float
  valueUnitsB: String
  valueEstimB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  index: String
  attachments: String
  children: String
}

input ProjectInput {
  id: ID!
  name: String
  serialNumber: String
  description: String
  dateCreatedAt: String
  valueUnitsA: String
  valueEstimA: Float
  valueUnitsB: String
  valueEstimB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  index: String
  attachments: String
  children: String
}

input ProjectInputUpdate {
  id: ID!
  name: String
  serialNumber: String
  description: String
  dateCreatedAt: String
  valueUnitsA: String
  valueEstimA: Float
  valueUnitsB: String
  valueEstimB: Float
  dateEstimStart: String
  dateEstimEnd: String
  dateActionStart: String
  dateActionEnd: String
  index: String
  attachments: String
  children: String
}


type Location {
  id: ID!
  dateCreatedAt: String
  name: String
  email: String
  phone: String
  webPage: String
  country: String
  city: String
  street: String
  address: String
}

input LocationInput {
  id: ID!
  dateCreatedAt: String!
  name: String!
  email: String
  phone: String
  webPage: String
  country: String
  city: String
  street: String
  address: String
}

input LocationInputUpdate {
  id: ID!
  name: String
  email: String
  phone: String
  webPage: String
  country: String
  city: String
  street: String
  address: String
}


type Query @aws_iam @aws_api_key {
  getTenantById(tenantId: String!): Tenant
  getTenantUser(refId: String!, tenantUserId: String!): TenantUser
  listTenants(prefix: String): [Tenant]
  listTenantsNotOwn(prefix: String, refId: String): [TenantUser]
  listTenantUsers: [TenantUser]
  getOrgById(orgId: String!): Org
  listOrgs(prefix: String): [Org]
  getItemById(itemId: String!): Item
  getItemBySerialNumber(serialNumber: String!): Item
  listItems: [Item]
  getItemTypeById(itemTypeId: String!): ItemType
  listItemTypes: [ItemType]
  getEndUserAccount: EndUser
  getEndUserById(endUserId: String!): EndUser
  listEndUsers(prefix: String): [EndUser]
  getEndUserInfoById(endUserInfoId: String!): EndUserInfo
  listEndUserInfos: [EndUserInfo]
  getPersonById(personId: String!): Person
  listPersons: [Person]
  getGroupById(groupId: String!): Group
  listGroups: [Group]
  getActionById(actionId: String!): Action
  listActions(prefix: String): [Action]
  clientListActionsFuture: [ActionFuture]
  @aws_iam @aws_api_key
  getActionTypeById(actionTypeId: String!): ActionType
  listActionTypes: [ActionType]
  getActionGangById(actionGangId: String!): ActionGang
  listActionGangs(prefix: String): [ActionGang]
  getProjectById(projectId: String!): Project
  listProjects: [Project]
  getLocationById(locationId: String!): Location
  listLocations: [Location]
}

type Mutation {
  createTenant(tenant: TenantInput!): Tenant
  updateTenant(tenant: TenantInputUpdate!): Tenant
  deleteTenant(tenantId: String!): String
  inviteTenantUserRequest(tenantUser: TenantUserInput!): TenantUser
  inviteTenantUserAccept(tenantUser: TenantUserInputUpdate!): TenantUser
  # tenantUserInviteAcceptToken(tenantUserToken: String!): String
  updateTenantUser(tenantUser: TenantUserInputUpdate!): TenantUser
  deleteTenantUser(tenantUserId: String!): String
  createOrg(org: OrgInput!): Org
  updateOrg(org: OrgInputUpdate!): Org
  deleteOrg(orgId: String!): String
  createItem(item: ItemInput!): Item
  updateItem(item: ItemInputUpdate!): Item
  deleteItem(itemId: String!): String
  createItemType(itemType: ItemTypeInput!): ItemType
  updateItemType(itemType: ItemTypeInputUpdate!): ItemType
  deleteItemType(itemTypeId: String!): String
  createEndUser(endUser: EndUserInput!): EndUser
  updateEndUser(endUser: EndUserInputUpdate!): EndUser
  verifyEndUserEmailRequest(endUser: EndUserInputUpdate!): String
  verifyEndUserEmailConfirm(endUserToken: String!): String
  @aws_iam @aws_api_key
  deleteEndUser(endUserId: String!): String
  createEndUserInfo(endUserInfo: EndUserInfoInput!): EndUserInfo
  updateEndUserInfo(endUserInfo: EndUserInfoInputUpdate!): EndUserInfo
  inviteEndUserRequest(endUserInfo: EndUserInfoInput!): EndUserInfo
  inviteEndUserConfirm(endUserInfoToken: String!): String
  @aws_iam @aws_api_key
  deleteEndUserInfo(endUserInfoId: String!): String
  createPerson(person: PersonInput!): Person
  updatePerson(person: PersonInputUpdate!): Person
  deletePerson(personId: String!): String
  createGroup(group: GroupInput!): Group
  updateGroup(group: GroupInputUpdate!): Group
  deleteGroup(groupId: String!): String
  createAction(action: ActionInput!): Action
  updateAction(action: ActionInputUpdate!): Action
  deleteAction(actionId: String!): String
  createActionType(actionType: ActionTypeInput!): ActionType
  updateActionType(actionType: ActionTypeInputUpdate!): ActionType
  deleteActionType(actionTypeId: String!): String
  createActionGang(actionGang: ActionGangInput!): ActionGang
  updateActionGang(actionGang: ActionGangInputUpdate!): ActionGang
  deleteActionGang(actionGangId: String!): String
  createProject(project: ProjectInput!): Project
  updateProject(project: ProjectInputUpdate!): Project
  deleteProject(projectId: String!): String
  createLocation(location: LocationInput!): Location
  updateLocation(location: LocationInputUpdate!): Location
  deleteLocation(locationId: String!): String
}
